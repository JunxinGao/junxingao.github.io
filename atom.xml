<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Junxin&#39;s Notes</title>
  
  
  <link href="http://gjx.me/atom.xml" rel="self"/>
  
  <link href="http://gjx.me/"/>
  <updated>2021-09-08T10:11:26.000Z</updated>
  <id>http://gjx.me/</id>
  
  <author>
    <name>Junxin Gao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WSL自动启动 service</title>
    <link href="http://gjx.me/2021/09/08/2021/wsl-auto-startup-service/"/>
    <id>http://gjx.me/2021/09/08/2021/wsl-auto-startup-service/</id>
    <published>2021-09-08T10:11:26.000Z</published>
    <updated>2021-09-08T10:11:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>WSL 无法自启动service</p><p><img src="https://imgs.gjx.me/picgo/2021/09/image-20210908181459004.png" alt="image-20210908181459004"></p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><h2 id="1-新建bat脚本"><a href="#1-新建bat脚本" class="headerlink" title="1. 新建bat脚本"></a>1. 新建bat脚本</h2><p>例如需要自启动 <code>ssh</code> 和 <code>docker</code> 服务，新建一个 <code>wsl_startup.bat</code>如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl -d Ubuntu -u root -e sudo service ssh start</span><br><span class="line">wsl -d Ubuntu -u root -e sudo service docker start</span><br></pre></td></tr></tbody></table></figure><p>这里的 -d 用于指定不同的WSL，可在 <code>CMD</code> 通过 <code>wsl -l</code> 查询到</p><p><img src="https://imgs.gjx.me/picgo/2021/09/image-20210908182257147.png" alt="image-20210908182257147"></p><h2 id="2-复制脚本到windows自动目录"><a href="#2-复制脚本到windows自动目录" class="headerlink" title="2. 复制脚本到windows自动目录"></a>2. 复制脚本到windows自动目录</h2><p>运行中输入 <code>shell:startup</code></p><p><img src="https://imgs.gjx.me/picgo/2021/09/image-20210908181836285.png" alt="image-20210908181836285"></p><p>复制刚才新建的脚本到此目录</p><p><img src="https://imgs.gjx.me/picgo/2021/09/image-20210908182008660.png" alt="image-20210908182008660"></p><h2 id="3-重启系统"><a href="#3-重启系统" class="headerlink" title="3. 重启系统"></a>3. 重启系统</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;WSL 无法自启动service&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgs.gjx.me/picgo/2021/09/im</summary>
      
    
    
    
    <category term="Windows" scheme="http://gjx.me/categories/Windows/"/>
    
    
    <category term="WSL" scheme="http://gjx.me/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>aws-shell &quot;&#39;Namespace&#39; object has no attribute &#39;cli_binary_format&#39;&quot;</title>
    <link href="http://gjx.me/2021/08/10/2021/aws-shell-cli-binary-format-issue/"/>
    <id>http://gjx.me/2021/08/10/2021/aws-shell-cli-binary-format-issue/</id>
    <published>2021-08-10T05:58:34.000Z</published>
    <updated>2021-08-10T05:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><a href="https://github.com/awslabs/aws-shell/issues/238">https://github.com/awslabs/aws-shell/issues/238</a></p><p>在<code>aws-shell</code>中运行cli命令时候失败</p><p><img src="https://imgs.gjx.me/picgo/75134735-83cd5d00-5722-11ea-8ef1-78c29fd6119f.png" alt="img"></p><p>这个是因为当前<code>aws-shell</code> 并不支持 <code>awscli v2</code></p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><ol><li>卸载v2版本的<code>awscli</code>，安装v1版本的<code>awscli</code></li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew uninstall awscli</span><br><span class="line">brew install awscli@1</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Downloading https://ghcr.io/v2/homebrew/core/awscli/1/manifests/1.20.10</span><br><span class="line">Already downloaded: /Users/Junxin/Library/Caches/Homebrew/downloads/75028ce994004c92af6e62b87f049ae457ab15d31a5c76678659fc0eb0e324a2--awscli@1-1.20.10.bottle_manifest.json</span><br><span class="line">==&gt; Downloading https://ghcr.io/v2/homebrew/core/awscli/1/blobs/sha256:4fe74c77019cd3ee34cf161f69048ab8805171e9d6236ecbf79482f12593fdf2</span><br><span class="line">Already downloaded: /Users/Junxin/Library/Caches/Homebrew/downloads/73be8076212d9de63292764c90652162a78fd1f15d25ef4e411c8f18c53277bb--awscli@1--1.20.10.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Reinstalling awscli@1</span><br><span class="line">==&gt; Pouring awscli@1--1.20.10.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">The "examples" directory has been installed to:</span><br><span class="line">  /usr/local/share/awscli/examples</span><br><span class="line"></span><br><span class="line">awscli@1 is keg-only, which means it was not symlinked into /usr/local,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have awscli@1 first in your PATH, run:</span><br><span class="line">  echo 'export PATH="/usr/local/opt/awscli@1/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zsh completions and functions have been installed to:</span><br><span class="line">  /usr/local/opt/awscli@1/share/zsh/site-functions</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/awscli@1/1.20.10: 11,559 files, 79.8MB</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>删除老的软链接，并根据安装v1的版本号(<code>1.20.10</code>)创建新的软链接。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm /usr/local/bin/aws</span><br><span class="line">ln -s /usr/local/Cellar/awscli@1/1.20.10/libexec/bin/aws /usr/local/bin/aws</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/awslabs/aws-shell/issues/238&quot;&gt;https://gith</summary>
      
    
    
    
    <category term="AWS" scheme="http://gjx.me/categories/AWS/"/>
    
    
    <category term="AWS" scheme="http://gjx.me/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>大数据相关资源</title>
    <link href="http://gjx.me/2021/08/06/datascience-resources/"/>
    <id>http://gjx.me/2021/08/06/datascience-resources/</id>
    <published>2021-08-06T10:19:21.000Z</published>
    <updated>2022-06-03T11:29:26.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网上资料"><a href="#网上资料" class="headerlink" title="网上资料"></a>网上资料</h1><p><a href="https://zhuanlan.zhihu.com/pydatalysis">https://zhuanlan.zhihu.com/pydatalysis</a></p><h1 id="开源BI系统"><a href="#开源BI系统" class="headerlink" title="开源BI系统"></a>开源BI系统</h1><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>Superset</td><td></td><td></td></tr><tr><td>Metabase</td><td></td><td></td></tr><tr><td>Redash</td><td></td><td></td></tr><tr><td>Hue</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h1><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>pyecharts</td><td></td><td></td></tr><tr><td>plotly</td><td></td><td></td></tr><tr><td>bokeh</td><td></td><td></td></tr><tr><td>matplotlib</td><td></td><td></td></tr><tr><td>Pandas-Bokeh</td><td><a href="https://github.com/PatrikHlobil/Pandas-Bokeh">https://github.com/PatrikHlobil/Pandas-Bokeh</a></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网上资料&quot;&gt;&lt;a href=&quot;#网上资料&quot; class=&quot;headerlink&quot; title=&quot;网上资料&quot;&gt;&lt;/a&gt;网上资料&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/pydatalysis&quot;&gt;https://zhuan</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>隐藏ubuntu用户登录</title>
    <link href="http://gjx.me/2021/08/06/2021/ubuntu_hide_user_login/"/>
    <id>http://gjx.me/2021/08/06/2021/ubuntu_hide_user_login/</id>
    <published>2021-08-06T06:12:13.000Z</published>
    <updated>2021-08-06T06:12:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在登录界面隐藏普通用户"><a href="#在登录界面隐藏普通用户" class="headerlink" title="在登录界面隐藏普通用户"></a>在登录界面隐藏普通用户</h1><p>在<code>/var/lib/AccountsService/users/</code>文件夹下新建一个与用户名相同的文件,在文件中加上<code>SystemAccount=true</code></p><p>e.g. 例如隐藏用户名为<code>test_user</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /var/lib/AccountsService/users/test_user</span><br><span class="line">[InputSource0]</span><br><span class="line">xkb=us</span><br><span class="line"></span><br><span class="line">[User]</span><br><span class="line">XSession=</span><br><span class="line">SystemAccount=true</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在登录界面隐藏普通用户&quot;&gt;&lt;a href=&quot;#在登录界面隐藏普通用户&quot; class=&quot;headerlink&quot; title=&quot;在登录界面隐藏普通用户&quot;&gt;&lt;/a&gt;在登录界面隐藏普通用户&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;/var/lib/AccountsService/us</summary>
      
    
    
    
    <category term="Linux" scheme="http://gjx.me/categories/Linux/"/>
    
    
    <category term="Ubuntu" scheme="http://gjx.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>删除无用docker镜像</title>
    <link href="http://gjx.me/2021/08/06/2021/remove_useless_docker_images/"/>
    <id>http://gjx.me/2021/08/06/2021/remove_useless_docker_images/</id>
    <published>2021-08-06T05:03:42.000Z</published>
    <updated>2021-08-06T05:03:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker stop</span><br><span class="line">docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker rm</span><br><span class="line">docker images|grep none|awk '{print $3 }'|xargs docker rmi</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="Docker" scheme="http://gjx.me/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://gjx.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hands-on Machine Learning with Scikit-Learn &amp; TensorFlow Study Notes—Chapter 1</title>
    <link href="http://gjx.me/2019/01/07/2019/Hands-on-Machine-Learning-with-Scikit-Learn-TensorFlow-Study-Notes%E2%80%94Chapter-1/"/>
    <id>http://gjx.me/2019/01/07/2019/Hands-on-Machine-Learning-with-Scikit-Learn-TensorFlow-Study-Notes%E2%80%94Chapter-1/</id>
    <published>2019-01-07T05:52:19.000Z</published>
    <updated>2019-01-07T05:52:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录 <em>Hands-on Machine Learning with Scikit-Learn &amp; TensorFlow</em> 这本书第一章的学习笔记。</p><h2 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习?"></a>什么是机器学习?</h2><p>机器学习是通过编程让计算机从数据中进行学习的科学(和艺术)。</p><p><strong>下面是一个更广义的概念:</strong></p><p>机器学习是让计算机具有学习的能力,无需进行明确编程。——亚瑟·萨缪尔,1959</p><p><strong>和一个工程性的概念:</strong></p><p>计算机程序利用经验<code>E</code>学习任务<code>T</code>, 性能是<code>P</code>, 如果针对任务<code>T</code>的性能<code>P</code>随着经验<code>E</code>不断增<br>长,则称为机器学习。——汤姆·米切尔,1997</p><span id="more"></span><h2 id="机器学习系统的类型"><a href="#机器学习系统的类型" class="headerlink" title="机器学习系统的类型"></a>机器学习系统的类型</h2><p><strong>机器学习有多种类型,可以根据如下规则进行分类:</strong></p><p>是否在人类监督下进行训练 (监督, 非监督, 半监督和强化学习)</p><p>是否可以动态渐进学习 (在线学习<code>vs</code>批量学习)</p><p>它们是否只是通过简单地比较新的数据点和已知的数据点, 或者在训练数据中进行模式识别, 以建立一个预测模型, 就像科学家所做的那样 (基于实例学习<code>vs</code>基于模型学习)</p><h3 id="监督-非监督学习"><a href="#监督-非监督学习" class="headerlink" title="监督/非监督学习"></a>监督/非监督学习</h3><h4 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h4><p>训练算法的训练数据包含了答案(称为label)</p><h4 id="非监督学习"><a href="#非监督学习" class="headerlink" title="非监督学习"></a>非监督学习</h4><p>训练算法的训练数据不包含label</p><h4 id="半监督学习"><a href="#半监督学习" class="headerlink" title="半监督学习"></a>半监督学习</h4><p>一些算法可以处理部分带标签的训练数据, 通常是大量不带标签数据加上小部分带标签数据。</p><h4 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h4><p>学习系统在这里被称为智能体(agent), 可以对环境进行观察, 选择和执行动作, 获得奖励(负奖励是惩罚)。然后它必须自己学习哪个是最佳方法(称为策略, policy), 以得到长久的最大奖励。策略决定了智能体在给定情况下应该采取的行动。</p><h3 id="批量和在线学习"><a href="#批量和在线学习" class="headerlink" title="批量和在线学习"></a>批量和在线学习</h3><h4 id="批量学习"><a href="#批量学习" class="headerlink" title="批量学习"></a>批量学习</h4><p>在批量学习中,系统不能进行持续学习: 必须用所有可用数据进行训练。这通常会占用大量时间和计算资源,所以一般是线下做的。首先是进行训练, 然后部署在生产环境且停止学习,它只是使用已经学到的策略。这称为离线学习。</p><h4 id="在线学习"><a href="#在线学习" class="headerlink" title="在线学习"></a>在线学习</h4><p>在在线学习中,是用数据实例持续地进行训练, 可以一次一个或一次几个实例(称为小批量)。每个学习步骤都很快且廉价,所以系统可以动态地学习到达的新数据。</p><h3 id="基于实例vs基于模型学习"><a href="#基于实例vs基于模型学习" class="headerlink" title="基于实例vs基于模型学习"></a>基于实例vs基于模型学习</h3><h4 id="基于实例学习"><a href="#基于实例学习" class="headerlink" title="基于实例学习"></a>基于实例学习</h4><p>系统先用记忆学习案例,然后使用相似度测量推广到新的例子</p><h4 id="基于模型学习"><a href="#基于模型学习" class="headerlink" title="基于模型学习"></a>基于模型学习</h4><p>另一种从样本集进行归纳的方法是建立这些样本的模型, 然后使用这个模型进行预测。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要记录 &lt;em&gt;Hands-on Machine Learning with Scikit-Learn &amp;amp; TensorFlow&lt;/em&gt; 这本书第一章的学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;什么是机器学习&quot;&gt;&lt;a href=&quot;#什么是机器学习&quot; class=&quot;headerlink&quot; title=&quot;什么是机器学习?&quot;&gt;&lt;/a&gt;什么是机器学习?&lt;/h2&gt;&lt;p&gt;机器学习是通过编程让计算机从数据中进行学习的科学(和艺术)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面是一个更广义的概念:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;机器学习是让计算机具有学习的能力,无需进行明确编程。——亚瑟·萨缪尔,1959&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;和一个工程性的概念:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算机程序利用经验&lt;code&gt;E&lt;/code&gt;学习任务&lt;code&gt;T&lt;/code&gt;, 性能是&lt;code&gt;P&lt;/code&gt;, 如果针对任务&lt;code&gt;T&lt;/code&gt;的性能&lt;code&gt;P&lt;/code&gt;随着经验&lt;code&gt;E&lt;/code&gt;不断增&lt;br&gt;长,则称为机器学习。——汤姆·米切尔,1997&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://gjx.me/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://gjx.me/tags/Machine-Learning/"/>
    
    <category term="Scikit-Learn" scheme="http://gjx.me/tags/Scikit-Learn/"/>
    
    <category term="TensorFlow" scheme="http://gjx.me/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Python Kafka</title>
    <link href="http://gjx.me/2019/01/04/2019/Python-Kafka/"/>
    <id>http://gjx.me/2019/01/04/2019/Python-Kafka/</id>
    <published>2019-01-04T01:34:20.000Z</published>
    <updated>2019-01-04T01:34:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。</p></blockquote><h2 id="Confluent-kafka-client"><a href="#Confluent-kafka-client" class="headerlink" title="Confluent kafka client"></a>Confluent kafka client</h2><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://anaconda.org/conda-forge/python-confluent-kafka">https://anaconda.org/conda-forge/python-confluent-kafka</a></p><p><a href="https://docs.confluent.io/current/clients/confluent-kafka-python/">https://docs.confluent.io/current/clients/confluent-kafka-python/</a></p><p><a href="https://github.com/confluentinc/confluent-kafka-python">https://github.com/confluentinc/confluent-kafka-python</a></p><p><a href="https://kafka.apache.org/quickstart">https://kafka.apache.org/quickstart</a></p><span id="more"></span><h3 id="Envs"><a href="#Envs" class="headerlink" title="Envs"></a>Envs</h3><ul><li>anaconda 4.5.11</li><li>python 3.6</li><li>python-confluent-kafka 0.11.4</li></ul><h3 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h3><ol><li><p>建立新的python3环境</p><p><code>conda create --name confluent-kafka-env python=3.6</code></p><p><code>conda activate confluent-kafka-env</code></p></li><li><p>通过<code>conda</code>安装 confluent kafka</p><p><code>conda install python-confluent-kafka </code></p></li><li><p>下载并启动kafka server</p><p><code>wget http://mirrors.hust.edu.cn/apache/kafka/2.1.0/kafka_2.11-2.1.0.tgz &amp;&amp; tar -xzf kafka_2.11-2.1.0.tgz </code></p><p><code>cd kafka_2.11-2.1.0</code></p><p><code>bin/zookeeper-server-start.sh config/zookeeper.properties</code></p><p><code>bin/kafka-server-start.sh config/server.properties</code></p></li></ol><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><p><a href="https://github.com/Murugar/ConfluentPythonKafka.git">https://github.com/Murugar/ConfluentPythonKafka.git</a></p><p><strong>Producer.py</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> gmtime, strftime, sleep</span><br><span class="line"><span class="keyword">from</span> confluent_kafka <span class="keyword">import</span> Producer</span><br><span class="line"></span><br><span class="line">p = Producer({<span class="string">'bootstrap.servers'</span>: <span class="string">'localhost:9092'</span>})</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        now = strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, gmtime())</span><br><span class="line">        p.produce(<span class="string">'test_topic'</span>, now.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        p.flush()</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#p.produce('mytopic', 'Test Message')</span></span><br><span class="line"><span class="comment">#p.flush()</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Consumer.py</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> confluent_kafka <span class="keyword">import</span> Consumer, KafkaError</span><br><span class="line"></span><br><span class="line">c = Consumer({<span class="string">'bootstrap.servers'</span>: <span class="string">'localhost:9092'</span>, <span class="string">'group.id'</span>: <span class="string">'mygroup'</span>,</span><br><span class="line">              <span class="string">'default.topic.config'</span>: {<span class="string">'auto.offset.reset'</span>: <span class="string">'smallest'</span>}})</span><br><span class="line">c.subscribe([<span class="string">'test_topic'</span>])</span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    msg = c.poll()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg.error():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'Received message: %s'</span> % msg.value().decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">elif</span> msg.error().code() != KafkaError._PARTITION_EOF:</span><br><span class="line">        <span class="built_in">print</span>(msg.error())</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line">c.close()</span><br></pre></td></tr></tbody></table></figure><p>运行python</p><p><code>python Producer.py</code></p><p><code>python Consumer.py</code></p><p>consumer 可以接收到来自 producer 的msg</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Confluent-kafka-client&quot;&gt;&lt;a href=&quot;#Confluent-kafka-client&quot; class=&quot;headerlink&quot; title=&quot;Confluent kafka client&quot;&gt;&lt;/a&gt;Confluent kafka client&lt;/h2&gt;&lt;h3 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://anaconda.org/conda-forge/python-confluent-kafka&quot;&gt;https://anaconda.org/conda-forge/python-confluent-kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.confluent.io/current/clients/confluent-kafka-python/&quot;&gt;https://docs.confluent.io/current/clients/confluent-kafka-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/confluentinc/confluent-kafka-python&quot;&gt;https://github.com/confluentinc/confluent-kafka-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kafka.apache.org/quickstart&quot;&gt;https://kafka.apache.org/quickstart&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Kafka" scheme="http://gjx.me/categories/Kafka/"/>
    
    
    <category term="Python" scheme="http://gjx.me/tags/Python/"/>
    
    <category term="Kafka" scheme="http://gjx.me/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>linux下创建热点</title>
    <link href="http://gjx.me/2016/02/27/2016/2016-02-28-linux-createap/"/>
    <id>http://gjx.me/2016/02/27/2016/2016-02-28-linux-createap/</id>
    <published>2016-02-27T16:00:00.000Z</published>
    <updated>2016-02-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux创建热点"><a href="#linux创建热点" class="headerlink" title="linux创建热点"></a>linux创建热点</h1><hr><h2 id="create-ap"><a href="#create-ap" class="headerlink" title="create_ap"></a>create_ap</h2><p>先甩个链接：</p><blockquote><p><a href="https://github.com/oblique/create_ap">https://github.com/oblique/create_ap</a></p></blockquote><p>安装就不说了.</p><ul><li>首先先查看你的网卡</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">~ » ifconfig                                                         </span><br><span class="line">enp2s0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 20:89:84:97:0d:ac  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 0  (Local Loopback)</span><br><span class="line">        RX packets 972  bytes 53280 (52.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 972  bytes 53280 (52.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlp3s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.202.36.11  netmask 255.255.252.0  broadcast 10.202.39.255</span><br><span class="line">        inet6 fe80::26fd:52ff:fe74:c002  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 24:fd:52:74:c0:02  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 35414  bytes 17903776 (17.0 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 14346  bytes 1851081 (1.7 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>可以看到网卡是enp2s0和wlp3s0，wlp3s0是无线网卡.</p><hr><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul><li>No passphrase (open network):</li></ul><blockquote><p>create_ap wlan0 eth0 MyAccessPoint</p></blockquote><p>我对应的命令就是</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo create_ap wlp3s0 enp2s0 MyAccessPoint</span><br></pre></td></tr></tbody></table></figure><p>那么带密码：</p><ul><li>WPA + WPA2 passphrase:</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo create_ap wlp3s0 enp2s0 MyAccessPoint MyPassPhrase</span><br></pre></td></tr></tbody></table></figure><ul><li>Internet sharing from the same WiFi interface:</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo create_ap wlp3s0 wlp3s0 MyAccessPoint MyPassPhrase</span><br></pre></td></tr></tbody></table></figure><p>感觉常用的就这三个.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;linux创建热点&quot;&gt;&lt;a href=&quot;#linux创建热点&quot; class=&quot;headerlink&quot; title=&quot;linux创建热点&quot;&gt;&lt;/a&gt;linux创建热点&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;create-ap&quot;&gt;&lt;a href=&quot;#create-ap&quot; </summary>
      
    
    
    
    <category term="Linux" scheme="http://gjx.me/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://gjx.me/tags/Linux/"/>
    
    <category term="AP" scheme="http://gjx.me/tags/AP/"/>
    
  </entry>
  
  <entry>
    <title>一个禁用笔记本键盘的命令</title>
    <link href="http://gjx.me/2016/02/24/2016/2016-02-25-disablelabtopkeyboard/"/>
    <id>http://gjx.me/2016/02/24/2016/2016-02-25-disablelabtopkeyboard/</id>
    <published>2016-02-24T16:00:00.000Z</published>
    <updated>2016-02-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发现一个linux下禁用键盘的命令"><a href="#发现一个linux下禁用键盘的命令" class="headerlink" title="发现一个linux下禁用键盘的命令"></a>发现一个linux下禁用键盘的命令</h2><hr><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rmmod atkbd </span><br></pre></td></tr></tbody></table></figure><p>临时禁用然后把键盘放在笔记本上，再也不用担心外接键盘压到笔记本按键了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;发现一个linux下禁用键盘的命令&quot;&gt;&lt;a href=&quot;#发现一个linux下禁用键盘的命令&quot; class=&quot;headerlink&quot; title=&quot;发现一个linux下禁用键盘的命令&quot;&gt;&lt;/a&gt;发现一个linux下禁用键盘的命令&lt;/h2&gt;&lt;hr&gt;
&lt;figure </summary>
      
    
    
    
    <category term="Linux" scheme="http://gjx.me/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://gjx.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>客制化机械键盘-gh60 hhkb配列</title>
    <link href="http://gjx.me/2016/02/20/2016/2016-02-21-gh60-assemble/"/>
    <id>http://gjx.me/2016/02/20/2016/2016-02-21-gh60-assemble/</id>
    <published>2016-02-20T16:00:00.000Z</published>
    <updated>2016-02-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gh60-hhkb-组装过程"><a href="#gh60-hhkb-组装过程" class="headerlink" title="gh60-hhkb 组装过程"></a>gh60-hhkb 组装过程</h1><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近着迷于hhkb，无奈太贵，继而寻找到替代品，客制化gh60，可以组装成类hhkb。</p><p>hhkb布局:</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60.png" alt="hhkb布局"> </p><hr><span id="more"></span><h2 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h2><blockquote><p>一个完整的机械键盘由四个部分组成 : 外壳, 内胆, 键帽, 数据线.<br>一套完整的内胆由：PCB, 轴体 ,卫星轴 ,定位板 ,LED  组成.</p></blockquote><p>由于手里有之前淘来的罗技g710垃圾成色可做拆轴用,可以省下轴体的费用,另外键帽淘宝有129的pbt键帽但是不透光那led灯就也没必要装,灯污染还是不要的好…</p><p>1.材料图:</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-0-cailiao.jpg" alt="cailiao"> </p><p>图中有pcb、定位板、键帽、外壳,卫星轴和数据线就不上图了.</p><p>2.拆轴罗技G710+键盘:</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-1-luoji.jpg" alt="g710"> </p><p>之前淘宝淘来的拆轴板接了线买了键帽还可以使用就是难看了点，手感不错，我手上有一堆cherry黑轴也是从别的板子上拆过来的，但是我喜欢茶轴把g710+的茶轴拆下来换上黑轴还可以继续使用，嘿嘿.</p><hr><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>1.先在pcb上装上卫星轴</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-3-weixingzhou.jpg" alt="weixingzhou"> </p><p>挺简单的要注意下方向.</p><p>2.继续装开关轴</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-4-shangzhou.jpg" alt="zhou"> </p><p>可以先用橡皮筋将pcb和定位板先固定住，然后再一个一个上轴.</p><p>3.再装键帽看下</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-5-jianmao.jpg" alt="jianmao"> </p><p>这里先装键帽为了看下是否符合预期结果，然而我这里有一个问题，空格键是7x的，我装的是6.5x的卫星轴，空格键装不上，悲催…只好再去买7x的卫星轴，换空格键也是可以的，但是那样键盘整体看起来就不怎么舒服了，毕竟不是同一套键帽.</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-6.jpg" alt="jianmaonext"> </p><p>4.7x卫星轴到了</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-7.jpg" alt="jianmaolo"> </p><p>看下键帽是否整齐，不齐的话压一下.</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-8.jpg" alt="kanqi"> </p><p>整齐的话就可以焊锡了，这里焊的时候先用手指按下轴以防焊的不牢固.</p><p>5.焊好之后装外壳</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-9-waike.jpg" alt="waike"> </p><p>一共6个螺丝钉，安好之后装键帽就大功告成了. </p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-10.jpg" alt="end"> </p><p>这边你会发现左右两边都空着，因为我买的两个1.5x滑块都没到，所以先装好试试.<br>装滑块的话要在装外壳之前完成。</p><p>6.安装滑块后</p><p><img src="https://imgs.gjx.me/picgo/2021/09/gh60-11-final.jpg" alt="final"> </p><p>嘿嘿，终于完成了，买材料之前一定要先弄清楚需要哪些东西.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;gh60-hhkb-组装过程&quot;&gt;&lt;a href=&quot;#gh60-hhkb-组装过程&quot; class=&quot;headerlink&quot; title=&quot;gh60-hhkb 组装过程&quot;&gt;&lt;/a&gt;gh60-hhkb 组装过程&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近着迷于hhkb，无奈太贵，继而寻找到替代品，客制化gh60，可以组装成类hhkb。&lt;/p&gt;
&lt;p&gt;hhkb布局:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgs.gjx.me/picgo/2021/09/gh60.png&quot; alt=&quot;hhkb布局&quot;&gt; &lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Keyboard" scheme="http://gjx.me/categories/Keyboard/"/>
    
    
    <category term="gh60" scheme="http://gjx.me/tags/gh60/"/>
    
    <category term="HHKB" scheme="http://gjx.me/tags/HHKB/"/>
    
  </entry>
  
  <entry>
    <title>linux编码转换</title>
    <link href="http://gjx.me/2016/01/28/2016/2016-01-29-linux-encodingconv/"/>
    <id>http://gjx.me/2016/01/28/2016/2016-01-29-linux-encodingconv/</id>
    <published>2016-01-28T16:00:00.000Z</published>
    <updated>2016-01-28T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编码转换命令如下"><a href="#编码转换命令如下" class="headerlink" title="编码转换命令如下"></a>编码转换命令如下</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f GBK -t UTF-8 file1 -o file2</span><br></pre></td></tr></tbody></table></figure><p><strong>博客建好了，测试下markdown语法</strong></p><hr><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><blockquote><h1 id="这是-H1"><a href="#这是-H1" class="headerlink" title="这是 H1"></a>这是 H1</h1></blockquote><blockquote><h2 id="这是-H2"><a href="#这是-H2" class="headerlink" title="这是 H2"></a>这是 H2</h2></blockquote><blockquote><h6 id="这是-H6"><a href="#这是-H6" class="headerlink" title="这是 H6"></a>这是 H6</h6></blockquote><h1 id="这是-H1-1"><a href="#这是-H1-1" class="headerlink" title="这是 H1"></a>这是 H1</h1><h2 id="这是-H2-1"><a href="#这是-H2-1" class="headerlink" title="这是 H2"></a>这是 H2</h2><h3 id="这是-H3"><a href="#这是-H3" class="headerlink" title="这是 H3"></a>这是 H3</h3><h1 id="First-level-header"><a href="#First-level-header" class="headerlink" title="First level header"></a>First level header</h1><h3 id="Third-level-header"><a href="#Third-level-header" class="headerlink" title="Third level header"></a>Third level header</h3><h2 id="Second-level-header"><a href="#Second-level-header" class="headerlink" title="Second level header"></a>Second level header</h2><blockquote><p>This is a paragraph.</p><blockquote><p>A nested blockquote.</p></blockquote><h2 id="Headers-work"><a href="#Headers-work" class="headerlink" title="Headers work"></a>Headers work</h2><ul><li>lists too</li></ul><p>and all other block-level elements</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> l2f.gameserver.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">L2Character</span> <span class="keyword">extends</span> <span class="title class_">L2Object</span> {</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Short</span> <span class="variable">ABNORMAL_EFFECT_BLEEDING</span> <span class="operator">=</span> <span class="number">0x0_0_0_1</span>; <span class="comment">// not sure</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveTo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> {</span><br><span class="line">    _ai = <span class="literal">null</span>;</span><br><span class="line">    _log.warning(<span class="string">"Should not be called"</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Task of AI notification */</span></span><br><span class="line">  <span class="meta">@SuppressWarnings( { "nls", "unqualified-field-access", "boxing" })</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NotifyAITask</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CtrlEvent _evt;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; mList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        getAI().notifyEvent(_evt, _evt.class, <span class="literal">null</span>);</span><br><span class="line">      } <span class="keyword">catch</span> (Throwable t) {</span><br><span class="line">        t.printStackTrace();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, world!"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~~~~~~~</span><br><span class="line">code with tildes</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$$</span><br><span class="line">\begin{align*}</span><br><span class="line">  &amp; \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)</span><br><span class="line">  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\</span><br><span class="line">  &amp; (x_1, \ldots, x_n) \left( \begin{array}{ccc}</span><br><span class="line">      \phi(e_1, e_1) &amp; \cdots &amp; \phi(e_1, e_n) \\</span><br><span class="line">      \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">      \phi(e_n, e_1) &amp; \cdots &amp; \phi(e_n, e_n)</span><br><span class="line">    \end{array} \right)</span><br><span class="line">  \left( \begin{array}{c}</span><br><span class="line">      y_1 \\</span><br><span class="line">      \vdots \\</span><br><span class="line">      y_n</span><br><span class="line">    \end{array} \right)</span><br><span class="line">\end{align*}</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">This \`is not a code\` span!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This⋅para⋅line⋅starts⋅at⋅the⋅first⋅column.⋅However,</span><br><span class="line">⋅⋅⋅⋅⋅⋅the⋅following⋅lines⋅can⋅be⋅indented⋅any⋅number⋅of⋅spaces/tabs.</span><br><span class="line">⋅⋅⋅The⋅para⋅continues⋅here.</span><br><span class="line"></span><br><span class="line">⋅⋅This⋅is⋅another⋅paragraph,⋅not⋅connected⋅to⋅the⋅above⋅one.⋅But⋅⋅</span><br><span class="line">with⋅a⋅hard⋅line⋅break.⋅\\</span><br><span class="line">And⋅another⋅one.</span><br><span class="line"></span><br><span class="line">First level header</span><br><span class="line">==================</span><br><span class="line"></span><br><span class="line">Second level header</span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">   Other first level header</span><br><span class="line">=</span><br><span class="line"></span><br><span class="line">This is a normal</span><br><span class="line">paragraph.</span><br><span class="line"></span><br><span class="line">And A Header</span><br><span class="line">------------</span><br><span class="line">And a paragraph</span><br><span class="line"></span><br><span class="line">&gt; This is a blockquote.</span><br><span class="line"></span><br><span class="line">And A Header</span><br><span class="line">------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header</span><br><span class="line">---</span><br><span class="line">para</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test gcp</span><br><span class="line"></span><br><span class="line">~~~ html</span><br><span class="line">&lt;script type="text/javascript"&gt;</span><br><span class="line">// Say hello world until the user starts questioning</span><br><span class="line">// the meaningfulness of their existence.</span><br><span class="line">function helloWorld(world) {</span><br><span class="line">  for (var i = 42; --i &gt;= 0;) {</span><br><span class="line">    alert('Hello ' + String(world));</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p { color: pink }</span><br><span class="line">b { color: blue }</span><br><span class="line">u { color: "umber" }</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#h2outline'</span>).<span class="title function_">height</span>() <span class="comment">//获取元素高度</span></span><br><span class="line">$(<span class="string">'header'</span>).<span class="title function_">outerHeight</span>() <span class="comment">//获取元素外部高度(包括margin)</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;编码转换命令如下&quot;&gt;&lt;a href=&quot;#编码转换命令如下&quot; class=&quot;headerlink&quot; title=&quot;编码转换命令如下&quot;&gt;&lt;/a&gt;编码转换命令如下&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tbody</summary>
      
    
    
    
    <category term="Linux" scheme="http://gjx.me/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://gjx.me/tags/Linux/"/>
    
  </entry>
  
</feed>
